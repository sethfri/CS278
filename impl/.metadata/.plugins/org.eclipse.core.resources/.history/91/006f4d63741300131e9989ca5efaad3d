package org.cs27x.dropbox.test;

import org.cs27x.dropbox.DefaultFileManager;

import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

public class DefaultFileManagerTest {
	
	private Path watchedPath;
	private DefaultFileManager defaultFileManager;

	@BeforeClass
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
		this.watchedPath = Paths.get("~\Desktop\Developer\CS278\impl\Asgn2\test");
		
		if (!Files.exists(this.watchedPath)) {
			Files.createDirectory(this.watchedPath);
		}
		
		this.defaultFileManager = new DefaultFileManager(this.watchedPath);
	}

	@After
	public void tearDown() throws Exception {
	}

	@Test
	public void testPathExistence() {
		assertTrue(this.defaultFileManager.exists(this.watchedPath));
	}
	
	public void testWrite() throws IOException {
		String stringToWrite = "Hello World";
		this.defaultFileManager.write(this.watchedPath, stringToWrite.getBytes(), true);
		
		// Get the contents of the file
		// Make sure that the contents are correct
		
		// Write some more without overriding
		// Make sure that nothing is overridden
	}
	
	@Test
	public void testDeletion() throws IOException {
		this.defaultFileManager.delete(this.watchedPath);
		
		assertFalse(this.defaultFileManager.exists(this.watchedPath));
	}
}
